/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp TAB>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
            timeout-ms = <50>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
            timeout-ms = <50>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
            timeout-ms = <50>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <16 15>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 24>;
            timeout-ms = <50>;
        };

        new_combo {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <25 26>;
            timeout-ms = <50>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
      &kp Q        &kp W         &kp E         &kp R          &kp T               &kp Y             &kp U         &kp I        &kp O           &kp P
&gqt LGUI A  &gqt LALT S  &gqt LCTRL D  &gqt LSHFT F          &kp G               &kp H      &gqt RSHFT J  &gqt RCTRL K  &gqt RALT L  &gqt RGUI SEMI
      &kp Z        &kp X         &kp C         &kp V          &kp B               &kp N             &kp M     &kp COMMA      &kp DOT        &kp FSLH
                            &kp C_MUTE   &lt 1 SPACE  &tab_esc_ctrl    &mt LSHIFT ENTER  &ltq 2 BACKSPACE         &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        number {
            label = "NUMBER";
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4    &kp N5      &kp N6    &kp N7     &kp N8     &kp N9   &kp N0
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5    &kp LEFT  &kp DOWN     &kp UP  &kp RIGHT  &kp F11
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10    &kp HOME   &kp END  &kp PG_UP  &kp PG_DN  &kp F12
                &trans  &trans  &kp CAPS     &kp DEL     &mo 3     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        symbol {
            label = "SYMBOL";
            bindings = <
&kp EXCL  &kp AT  &kp HASH           &kp DLLR     &kp PRCNT    &kp CARET       &kp AMPS        &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
 &kp TAB   &none     &none            &kp SQT     &kp GRAVE    &kp MINUS      &kp EQUAL        &kp LBKT     &kp RIGHT_BRACKET               &kp BSLH
   &none   &none     &none  &kp DOUBLE_QUOTES     &kp TILDE    &kp UNDER       &kp PLUS  &kp LEFT_BRACE       &kp RIGHT_BRACE               &kp PIPE
                    &trans              &mo 3  &kp LEFT_ALT      &kp DEL  &kp BACKSPACE          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        ble {
            label = "BLE";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp KP_N7  &kp KP_N8  &kp KP_N9  &none  &kp BSPC
       &none         &none         &none    &bt BT_CLR  &out OUT_TOG    &kp KP_N4  &kp KP_N5  &kp KP_N6  &none     &none
       &none         &none         &none  &out OUT_USB  &out OUT_BLE    &kp KP_N1  &kp KP_N2  &kp KP_N3  &none     &none
                                  &trans         &none         &none    &kp KP_N0  &kp KP_N0     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };
    };
};

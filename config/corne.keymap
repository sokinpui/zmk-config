/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NUMBER 1
#define NAVIGATION 2
#define SYSTEM 3
#define FUNCTION 4
#define MACRO 5
#define WINDOW_MANAGER 5

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp SQT
   &mt LALT EQUAL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt LALT MINUS
   &mt LCTRL ESC  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp DEL
                  &kp LGUI &lt NAVIGATION ESC &mt LSHIFT SPACE   &lt NUMBER RET &kp BSPC &kp LNLCK
                        >;
                };

                NUMBER {
                        bindings = <
   &kp LS(TAB)   &kp TILDE &kp GRAVE &kp LBRC &kp LBKT &kp LPAR   &kp RPAR &kp RBKT  &kp RBRC     &kp BSLH   &kp PIPE    &kp DQT
   &kp PLUS &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7  &kp N8     &kp N9   &kp N0 &kp UNDER
   &trans &kp LS(Z) &kp LS(X) &kp LS(C) &kp LS(V) &kp LS(B)   &none &trans  &trans &trans &trans &trans
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };

                NAVIGATION {
                        bindings = <
   &kp CAPS   &kp LC(Q) &kp LC(W) &kp LC(E) &kp LC(R) &kp LC(T)   &kp LS(LEFT) &kp LS(DOWN)  &kp LS(UP)     &kp LS(RIGHT)   &none    &none
   &kp LC(EQUAL) &kp LC(A) &mo SYSTEM &kp LC(D) &mo FUNCTION &mo WINDOW_MANAGER   &kp LEFT &kp DOWN  &kp UP     &kp RIGHT   &kp LC(MINUS) &trans
   &trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(B)   &kp HOME &kp PG_DN  &kp PG_UP &kp END &trans &trans
                  &kp LGUI &mo 1 &kp SPACE   &kp RSHIFT &mo LC(BSPC) &trans
                        >;
                };

                SYSTEM {
                        bindings = <
   &none &none &none &none &none &none   &kp C_MUTE &kp C_VOL_DN  &kp C_VOL_UP     &none   &none &none
   &none &none &none &none &none &none   &none &kp C_BRI_DN  &kp C_BRI_UP     &none   &none &none
   &none &none &none &none &none &none   &none &none  &none     &none   &none &none
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };


                FUNCTION {
                        bindings = <
   &none   &none &none &none &none &none   &none &kp F1   &kp F2    &kp F3    &kp F4     &none
   &none &none &none &none &none &none   &none &kp F5   &kp F6      &kp F7    &kp F8  &none
   &none &none &none &none &none &none   &none &kp F9   &kp F10  &kp F11  &kp F12  &none
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };


                WINDOW_MANAGER {
                        bindings = <
   &none &none &none &none &none &none   &none &none  &none &none &none &none
   &none &none &none &none &none &none   &kp LG(LEFT) &kp LG(DOWN)  &kp LG(UP) &kp LG(LEFT) &none &none
   &none &none &none &none &none &none   &none &kp LG(1)  &kp LG(2) &kp LG(3) &none &none
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };

                //WINDOW_MANAGER {
                        //bindings = <
   //&none &none &none &none &none &none   &none &none  &none &none &none &none
   //&none &none &none &none &none &none   &none &none  &none &none &none &none
   //&none &none &none &none &none &none   &none &none  &none &none &none &none
                  //&trans &trans &trans   &trans &trans &trans
                        //>;
                //};



        };
};
